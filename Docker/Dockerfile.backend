FROM python:3.12-slim

# Install system dependencies for bcrypt, OpenCV, matplotlib, and other requirements
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    python3-dev \
    libffi-dev \
    libssl-dev \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libfreetype6-dev \
    libpng-dev \
    pkg-config \
    fontconfig \
    fonts-dejavu-core \
    libgstreamer1.0-0 \
    libgstreamer-plugins-base1.0-0 \
    libgtk-3-0 \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    wget \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /usr/src/app

# Create necessary directories
RUN mkdir -p static/uploads Backend

# Copy requirements and install Python dependencies first for better caching
COPY requirements.txt ./
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt

# Copy only backend-specific files
COPY Backend/ ./Backend/

# Copy docker entrypoint script
COPY Docker/docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Create static directory - files will be mounted via volume
RUN mkdir -p ./static/uploads

# Copy the ML model if it exists (conditional copy using shell)
RUN if [ -f "Backend/pneumonia_detection.keras" ]; then cp Backend/pneumonia_detection.keras ./; else echo "Model file not found, will be mounted via volume"; fi

# Set environment variables
ENV FLASK_ENV=development
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/usr/bin/python3

# Create a non-root user for security
RUN useradd -m -u 1000 appuser && chown -R appuser:appuser /usr/src/app
USER appuser

EXPOSE 8000

# Use the entrypoint script
ENTRYPOINT ["docker-entrypoint.sh"]

# Run the application with gunicorn
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "1", "--timeout", "120", "Backend.app_mongodb:app"]
